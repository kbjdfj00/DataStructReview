//暴力
class Solution {
public:
    int largestRectangleArea(vector<int>& h) {
        int len=h.size();
        if(len==0) return 0;
        if(len==1) return h[0];
        int res=0;
        map<int,int> rec;
        for(int i=0;i<len;i++){
         
            int left=i;
            int right=i;
            while(left>=0){
                if(h[left]>=h[i]){
                    left--;
                }else{
                    break;
                }
            }
            while(right<len){
                if(h[right]>=h[i]){
                    right++;
                }else{
                    break;
                }
            }
            int temp=(right-left-1)*h[i];
            
            res=max(res,temp);
           
        }
        return res;
    }
};


//单调栈的方法
class Solution {
public:
    int largestRectangleArea(vector<int>& h) {
        int len=h.size();
        if(len==1) return h[0];

        int res=0;
        stack<int> s;
        for(int i=0;i<len;i++){
            while(!s.empty()&&h[s.top()]>h[i]){
                int hei=h[s.top()];
                s.pop();
                int wei=i;
                if(!s.empty()){
                    wei=i-s.top()-1;
                }
                res=max(res,hei*wei);
            }
            s.push(i);
        }

        while(!s.empty()){
            int hei=h[s.top()];
            s.pop();
            int wei=len;
            if(!s.empty()){
                wei=len-s.top()-1;
            }
            res=max(res,hei*wei);
        }
        return res;
    }
};
