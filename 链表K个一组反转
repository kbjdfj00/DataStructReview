 /**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        if(!head||!head->next||k==1)    return head;
        ListNode* hair=new ListNode(0);//头节点
        hair->next=head;
        auto pre=hair;
        auto cur=hair;
        while(cur){
            for(int i=0;i<k&&cur;i++){
                cur=cur->next;
            }
            if(!cur) return hair->next;
            auto temp1=pre->next;
            auto temp2=cur->next;
            cur->next=NULL;  //断开
            pre->next=reverseOneList(temp1);
            temp1->next=temp2;
            pre=temp1;
            cur=pre;
        }
        return hair->next;
    }


    //反转链表的函数
     ListNode *reverseOneList(ListNode *head)
    {
        if(!head || !head->next) return head;
        ListNode *prev = nullptr, *curr = head;
        while(curr)
        {
            ListNode *nextptr = curr -> next;
            curr -> next = prev;
            prev = curr;
            curr = nextptr;
        }
        return prev;
    }
};
