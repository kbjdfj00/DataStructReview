****************************************************************************************************
//求字符串的最长回文子串
class Solution {
public:
    string longestPalindrome(string s) {
        string res;
        int len=s.size();
        vector<vector<bool>> dp(len,vector<bool>(len,false));
        for(int l=0;l<len;l++){
            for(int i=0;i+l<len;i++){
                int j=i+l;
                if(l==0){
                    dp[i][j]=true;
                }else if(l==1){
                    dp[i][j]=(s[i]==s[j]);
                }else{
                    dp[i][j]=((s[i]==s[j])&&dp[i+1][j-1]);
                }

                if(dp[i][j]&&l+1>res.size()){
                    res=s.substr(i,l+1);
                }
            }
        }
        return res;
    }
};
****************************************************************************************************
//字符串回文子串的个数：
****************************************************************************************************
//两个字符串s1和s2的最长公共子串
****************************************************************************************************
//两字符串的最长公共子序列
****************************************************************************************************
