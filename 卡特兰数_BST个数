//传统的DP方法

class Solution {
public:
    int numTrees(int n) {
        vector<int> dp(n+1);
        dp[0]=1;
        for(int i=1;i<=n;i++){
            for(int j=1;j<=i;j++)
            dp[i]+=dp[j-1]*dp[i-j];
        }
        return dp[n];
    }
};



//直接用卡特兰数的公式C(n+1)=C(n)*2*(2*n+1)/(n+2);
class Solution {
public:
    int numTrees(int n) {
        long long  res=1;
        for(int i=0;i<n;i++){
            res=res*2*(2*i+1)/(i+2);
        }
        return res;
    }
};
